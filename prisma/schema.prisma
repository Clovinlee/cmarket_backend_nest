// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  email     String  @map("email")
  password  String? @map("password")
  name      String  @map("name")
  image_url String? @map("image_url")
  id_role   Int?    @map("id_role")
  role      Role?   @relation(fields: [id_role], references: [id])

  @@map(name: "users")
}

model EmailRegister {
  id                 Int       @id @default(autoincrement())
  email              String    @unique @map("email")
  email_confirm      Boolean   @default(false) @map("email_confirm")
  email_confirm_date DateTime? @map("email_confirm_date")
  uuid               String    @unique @map("uuid")
  created_at         DateTime? @default(now()) @map("created_at")
  expiry_at          DateTime? @map("expiry_at")

  @@map(name: "email_register")
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @map("name")
  level Int    @map("level")
  user  User[]

  @@map(name: "roles")
}

model Rarity {
  id      Int       @id @default(autoincrement())
  name    String    @map("name")
  level   Int       @map("level")
  color   String    @map("color")
  Product Product[]

  @@map(name: "rarities")
}

model Product {
  id                Int                 @id @default(autoincrement())
  name              String              @map("name")
  description       String?             @map("description")
  price             Float               @map("price")
  image             String?             @map("image")
  id_rarity         Int                 @map("id_rarity")
  rarity            Rarity              @relation(fields: [id_rarity], references: [id])
  ProductOnMerchant ProductOnMerchant[]

  @@map(name: "products")
}

model Merchant {
  id                Int                 @id @default(autoincrement())
  name              String              @map("name")
  ProductOnMerchant ProductOnMerchant[]

  @@map(name: "merchants")
}

model ProductOnMerchant {
  id          Int      @id @default(autoincrement())
  id_product  Int      @map("id_product")
  id_merchant Int      @map("id_merchant")
  product     Product  @relation(fields: [id_product], references: [id])
  merchant    Merchant @relation(fields: [id_merchant], references: [id])

  @@map(name: "products_merchants")
}
